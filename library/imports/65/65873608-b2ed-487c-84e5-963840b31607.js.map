{"version":3,"sources":["../../../../../assets/Script/ElectricEffect/assets/Script/ElectricEffect/ElectricEffect.ts"],"names":[],"mappings":";;;;;AAAA,+CAA0C;AAGpC,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAA4C,kCAAY;IADxD;QAGI,oBAAoB;QAHxB,qEAyCC;QAnCG,aAAO,GAAmB,IAAI,CAAC;QAE/B,mBAAa,GAAwB,IAAI,KAAK,EAAgB,CAAC;;IAiCnE,CAAC;IA/BG,YAAY;IAEZ,eAAe;IAEf,cAAc;IAEd,+BAAM,GAAN,UAAQ,EAAE;QACN,KAAkB,UAAkB,EAAlB,KAAA,IAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB;YAA/B,IAAI,KAAK,SAAA;YAEV,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACtB;IACL,CAAC;IAED,gCAAO,GAAP,UAAQ,gBAAqC;QAArC,iCAAA,EAAA,uBAAqC;QACzC,IAAI,KAAK,GAAG,IAAI,sBAAY,EAAE,CAAC;QAC/B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,gBAAgB,IAAE,IAAI,EAAE;YACxB,KAAK,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,CAAC;SACnD;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,mCAAU,GAAV;QACI,KAAkB,UAAkB,EAAlB,KAAA,IAAI,CAAC,aAAa,EAAlB,cAAkB,EAAlB,IAAkB;YAA/B,IAAI,KAAK,SAAA;YACV,KAAK,CAAC,KAAK,EAAE,CAAC;SACjB;QAED,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC5D,CAAC;IAjCD;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;mDACM;IALd,cAAc;QADlC,OAAO;OACa,cAAc,CAwClC;IAAD,qBAAC;CAxCD,AAwCC,CAxC2C,EAAE,CAAC,SAAS,GAwCvD;kBAxCoB,cAAc","file":"","sourceRoot":"../../../../../assets/Script/ElectricEffect","sourcesContent":["import ElectricFlow from \"./ElectricFlow\";\nimport ElectricNode from \"./ElectricNode\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class ElectricEffect extends cc.Component {\n\n    //#region Properties\n\n    @property(cc.SpriteFrame)\n    Texture: cc.SpriteFrame = null;\n\n    electricFlows: Array<ElectricFlow> = new Array<ElectricFlow>();\n\n    //#endregion\n\n    // onLoad () {}\n\n    // start () {}\n\n    update (dt) {\n        for (let eflow of this.electricFlows)\n        {\n            eflow.doUpdate(dt);\n        }\n    }\n\n    AddFlow(fromElectricNode: ElectricNode = null): ElectricFlow {\n        let eFlow = new ElectricFlow();\n        eFlow.Init(this.Texture, this.node);\n        if (fromElectricNode!=null) {\n            eFlow.AddExistingElectricNode(fromElectricNode);\n        }\n        this.electricFlows.push(eFlow);\n        return eFlow;\n    }\n\n    ClearFlows(){\n        for (let eflow of this.electricFlows) {\n            eflow.Clear();\n        }\n\n        this.electricFlows.splice(0, this.electricFlows.length);\n    }\n\n}\n"]}