{"version":3,"sources":["BombExplosionController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import CellController from \"./CellController\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class BombExplosionController extends cc.Component {\n\n    @property(cc.Sprite)\n    ExplosionH: cc.Sprite = null;\n\n    @property(cc.Sprite)\n    ExplosionV: cc.Sprite = null;\n\n    @property(cc.AudioSource)\n    ExplosionAudio: cc.AudioSource = null;\n\n    onLoad () {\n        // this.ExplosionH.enabled = false;\n        // this.ExplosionV.enabled = false;\n        this.node.opacity = 0;\n    }\n\n    update (dt) {\n        if (this.flashing) {\n            this.falsh_elapse_time += dt;\n            if (this.falsh_elapse_time > this.BOMB_FLASH_INTERVAL) {\n                this.flashNew();\n                this.falsh_elapse_time = 0;\n            }\n        }\n    }\n\n    Show(cell: CellController){\n        // this.ExplosionH.enabled = true;\n        // this.ExplosionV.enabled = true;\n        this.node.opacity = 255;\n\n        this.ExplosionH.node.setPosition(320,cell.node.position.y);\n        this.ExplosionV.node.setPosition(cell.node.position.x,480);\n        \n        this.flash_count = 0;\n        this.flashing = true;\n        // this.flash();\n\n        this.ExplosionAudio.play();\n    }\n\n    flash_count: number = 0;\n    BOMB_FLASH_SCALE:number = 0.8;\n    BOMB_FLASH_INTERVAL: number = 0.05;\n    falsh_elapse_time: number = 0;\n    flashing: boolean = false;\n    flash(){\n        if (this.flashing) {\n            this.flash_count++;\n            let scale = (this.flash_count % 2) == 0 ? 1 : this.BOMB_FLASH_SCALE;\n            this.ExplosionH.node.scaleY = scale;\n            this.ExplosionV.node.scaleY = scale;\n            this.scheduleOnce(\n                ()=>{\n                    this.flash();\n                },this.BOMB_FLASH_INTERVAL);\n        }\n        // else{\n        //     this.flash_count = 0;\n        //     this.Hide();\n        // }\n    }\n\n    flashNew(){\n        this.flash_count++;\n        let scale = (this.flash_count % 2) == 0 ? 1 : this.BOMB_FLASH_SCALE;\n        this.ExplosionH.node.scaleY = scale;\n        this.ExplosionV.node.scaleY = scale;\n    }\n\n    Hide(){\n        this.flashing = false;\n        this.node.opacity = 0;\n        // this.ExplosionH.enabled = false;\n        // this.ExplosionV.enabled = false;\n    }\n\n}\n"]}