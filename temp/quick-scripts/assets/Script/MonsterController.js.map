{"version":3,"sources":["MonsterController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["\nimport GameBoardController from \"./GameBoardController\";\nimport * as Enums from \"./Enums\";\nimport CellController from \"./CellController\";\nimport * as Global from \"./Global\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class MonsterController extends cc.Component {\n\n    //#region Properties\n\n    @property(cc.Sprite)\n    MonsterBody: cc.Sprite = null;\n\n    @property(cc.Sprite)\n    MonsterEye: cc.Sprite = null;\n\n    @property(cc.SpriteFrame)\n    m_eye_open: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_eye_closed: cc.SpriteFrame = null;\n\n    @property(cc.SpriteFrame)\n    m_1_noraml: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_1_angry: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_1_shock_1: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_1_shock_2: cc.SpriteFrame = null;\n    \n    @property(cc.SpriteFrame)\n    m_2_noraml: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_2_angry: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_2_shock_1: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_2_shock_2: cc.SpriteFrame = null;\n\n    @property(cc.SpriteFrame)\n    m_3_noraml: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_3_angry: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_3_shock_1: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_3_shock_2: cc.SpriteFrame = null;\n\n    @property(cc.SpriteFrame)\n    m_4_noraml: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_4_angry: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_4_shock_1: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_4_shock_2: cc.SpriteFrame = null;\n\n    @property(cc.SpriteFrame)\n    m_5_noraml: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_5_angry: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_5_shock_1: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_5_shock_2: cc.SpriteFrame = null;\n\n    @property(cc.SpriteFrame)\n    m_6_noraml: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_6_angry: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_6_shock_1: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_6_shock_2: cc.SpriteFrame = null;\n\n    @property(cc.SpriteFrame)\n    m_7_noraml: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_7_angry: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_7_shock_1: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_7_shock_2: cc.SpriteFrame = null;\n\n    @property(cc.SpriteFrame)\n    m_8_noraml: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_8_angry: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_8_shock_1: cc.SpriteFrame = null;\n    @property(cc.SpriteFrame)\n    m_8_shock_2: cc.SpriteFrame = null;\n\n    @property(cc.AudioSource)\n    AudioBark: cc.AudioSource = null;\n\n    sf_body_normal: cc.SpriteFrame = null;\n    sf_body_shock_1: cc.SpriteFrame = null;\n    sf_body_shock_2: cc.SpriteFrame = null;\n    sf_body_angry: cc.SpriteFrame = null;\n\n    gameBoard: GameBoardController = null;\n\n    Health = 1;\n\n    _MonsterType: Enums.MonsterType = Enums.MonsterType.Small;\n    get MonsterType() {\n        return this._MonsterType;\n    }\n    set MonsterType(type: Enums.MonsterType) {\n        this._MonsterType = type;\n        switch (this._MonsterType) {\n            case Enums.MonsterType.Small:\n                this.sf_body_normal = this.m_1_noraml;\n                this.sf_body_shock_1 = this.m_1_shock_1;\n                this.sf_body_shock_2 = this.m_1_shock_2;\n                this.sf_body_angry = this.m_1_angry;\n                this.Health = 1;\n                break;\n            case Enums.MonsterType.Drunk:\n                this.sf_body_normal = this.m_2_noraml;\n                this.sf_body_shock_1 = this.m_2_shock_1;\n                this.sf_body_shock_2 = this.m_2_shock_2;\n                this.sf_body_angry = this.m_2_angry;\n                this.Health = 1;\n                break;\n            case Enums.MonsterType.Fast:\n                this.sf_body_normal = this.m_5_noraml;\n                this.sf_body_shock_1 = this.m_5_shock_1;\n                this.sf_body_shock_2 = this.m_5_shock_2;\n                this.sf_body_angry = this.m_5_angry;\n                break;\n            case Enums.MonsterType.Large_1:\n                this.sf_body_normal = this.m_4_noraml;\n                this.sf_body_shock_1 = this.m_4_shock_1;\n                this.sf_body_shock_2 = this.m_4_shock_2;\n                this.sf_body_angry = this.m_4_angry;\n                this.Health = 1;\n                break;\n            case Enums.MonsterType.Large_2:\n                this.sf_body_normal = this.m_3_noraml;\n                this.sf_body_shock_1 = this.m_3_shock_1;\n                this.sf_body_shock_2 = this.m_3_shock_2;\n                this.sf_body_angry = this.m_3_angry;\n                this.Health = 2;\n                break;\n            case Enums.MonsterType.Queen:\n                this.sf_body_normal = this.m_8_noraml;\n                this.sf_body_shock_1 = this.m_8_shock_1;\n                this.sf_body_shock_2 = this.m_8_shock_2;\n                this.sf_body_angry = this.m_8_angry;\n                this.Health = 2; /* if the health is 1, she will die */\n                break;\n            case Enums.MonsterType.King_1:\n                this.sf_body_normal = this.m_7_noraml;\n                this.sf_body_shock_1 = this.m_7_shock_1;\n                this.sf_body_shock_2 = this.m_7_shock_2;\n                this.sf_body_angry = this.m_7_angry;\n                this.Health = 1;\n                break;\n            case Enums.MonsterType.King_2:\n                this.sf_body_normal = this.m_6_noraml;\n                this.sf_body_shock_1 = this.m_6_shock_1;\n                this.sf_body_shock_2 = this.m_6_shock_2;\n                this.sf_body_angry = this.m_6_angry;\n                this.Health = 2;\n                break;\n            default:\n                break;\n        }\n\n        this.MonsterBody.spriteFrame = this.sf_body_normal;\n        this.MonsterEye.spriteFrame = this.m_eye_open;\n    }\n\n    //#region Lifecycle\n\n    start () {\n        this.eyeBlink();\n        this.eyeMove();\n    }\n\n    onLoad () {\n        this.gameBoard = cc.find(\"Canvas\").getComponent(GameBoardController);\n    }\n\n    //#endregion\n\n    //#region Initialization\n\n    InitMonster(monsterType: Enums.MonsterType){\n        this.MonsterType = monsterType;\n    }\n\n    //#endregion\n\n    //#region Cell Attachment\n\n    attachedCell: CellController = null;\n\n    _WhereItShouldBe: cc.Vec2 = new cc.Vec2(0,0);\n    get WhereItShouldBe() {\n        if (this.attachedCell != null) {\n            return this.attachedCell.WhereItShouldBe;\n        }\n        return this._WhereItShouldBe;\n    }\n\n    AttachToCell(cell:CellController){\n\n        //detach first\n        this.detachFromCell();\n\n        //attach\n        this.attachedCell = cell;\n        cell.AttachedMonster = this;\n    }\n\n    detachFromCell(){\n        if (this.attachedCell != null && this.attachedCell.AttachedMonster == this) {\n            this.attachedCell.AttachedMonster = null;\n            this.attachedCell = null;\n        }\n    }\n\n    //#endregion\n\n    //#region Move Around\n\n    ShouldMoveAround = true;\n\n    GetReadyForShow(){\n        this.node.setPosition(this.attachedCell.Board_X * this.attachedCell.node.width + Global.BOARD_OFFSET_X, \n                              this.attachedCell.node.height * Global.BOARD_ROW_COUNT + Global.STARTING_LINE_OFFSET);\n    }\n\n    MoveToWhereItShoudBe(selector: Function){\n        this.node.runAction(\n            cc.sequence(\n                cc.moveTo(Global.MONSTER_MOVE_DURATION, this.WhereItShouldBe),\n                cc.callFunc(selector, this)\n            )\n        );\n    }\n\n\n    /* DO NOT directly attach the monster to target cell here, \n    because it may cause redundant MoveAround() call on the same monster \n    by processMonster() method in the GameBoardController.\n    So let's defer the attaching job to DoMoveAround() method, which will be executed \n    after all the monsters have been correctly prepared for movement \n    */\n    AlreadyMovedAround: boolean = false;\n    MoveAround() : boolean {\n        if (this.ShouldMoveAround == false) {\n            return false;\n        }\n\n        if (this.AlreadyMovedAround) {\n            return false;\n        }\n\n        let movingTarget: CellController = null;\n        if (this.MonsterType == Enums.MonsterType.Small) {\n            if (this.attachedCell.Board_Y == 0) {\n                this.Escape();\n            }\n            else{\n                let priority: [number, number][][] = [ [ [-1,+0]           ] \n                                                      ,[ [+0,+1] , [+0,-1] ] ];\n                movingTarget = this.tryGetAvailableCell(priority);\n            }\n        }\n        else if (this.MonsterType == Enums.MonsterType.Drunk) {\n            if (this.attachedCell.Board_Y == 0) {\n                this.Escape();\n            }\n            else{\n                let priority: [number, number][][] = [ [ [-1,+1] , [-1,-1] ] \n                                                      ,[ [-1,+0]           ]\n                                                      ,[ [+0,+1] , [+0,-1] ] ];\n                movingTarget = this.tryGetAvailableCell(priority);\n            }\n        }\n        else if (this.MonsterType == Enums.MonsterType.Fast) {\n            if (this.attachedCell.Board_Y <= 1) {\n                this.Escape();\n            }\n            else{\n                let priority: [number, number][][] = [ [ [-2,+0]           ] \n                                                        ,[ [-1,+0]           ] ];\n                movingTarget = this.tryGetAvailableCell(priority);\n            }\n        }\n        else if (this.MonsterType == Enums.MonsterType.Large_1 || this.MonsterType == Enums.MonsterType.Large_2) {\n            if (this.attachedCell.Board_Y == 0) {\n                this.Escape();\n            }\n            else{\n                let priority: [number, number][][] = [ [ [-1,+0]           ] \n                                                        ,[ [+0,+1] , [+0,-1] ] ];\n                movingTarget = this.tryGetAvailableCell(priority);\n            }\n        }\n        else if (this.MonsterType == Enums.MonsterType.Queen) {\n            if (this.attachedCell.Board_Y == 0) {\n                this.Escape();\n            }\n            else{\n                let priority: [number, number][][] = [ [ [-1,+1] , [-1,-1] ] \n                                                        ,[ [-1,+0]           ]\n                                                        ,[ [+0,+1] , [+0,-1] ] ];\n                movingTarget = this.tryGetAvailableCell(priority);\n            }\n        }\n        else if (this.MonsterType == Enums.MonsterType.King_1 || this.MonsterType == Enums.MonsterType.King_2) {\n            if (this.attachedCell.Board_Y <= 1) {\n                this.Escape();\n            }\n            else{\n                let priority: [number, number][][] = [ [ [-2,+1] , [-2,-1] ] \n                                                        ,[ [-2,+0]           ]\n                                                        ,[ [-1,+1] , [-1,-1] ] \n                                                        ,[ [-1,+0]           ]\n                                                        ,[ [+0,+1] , [+0,-1] ] ];\n                movingTarget = this.tryGetAvailableCell(priority);\n            }\n        }\n\n        if (movingTarget != null) {\n            this.AttachToCell(movingTarget);\n            this.AlreadyMovedAround = true;        \n        }\n\n        return this.escaped;\n    }\n\n    /* the type of 'priority' parameter is two-dimensional array of Tuple, whose structure is [number, number], \n    this tuple is used to hold offset values for target Row and Column */\n    tryGetAvailableCell(priority: [number, number][][]) : CellController {\n        let resultCell: CellController = null;\n        while (priority.length > 0) {\n            let options = priority.shift();\n            let choice = options[Math.floor(Math.random() * options.length)];\n            let targetRow = this.attachedCell.Board_Y + choice[0];\n            let targetCol = this.attachedCell.Board_X + choice[1];\n            \n            if (targetCol < 0 || targetCol >= Global.BOARD_COLUMN_COUNT ) {\n                continue;\n            }\n\n            let cell = this.gameBoard.cellMatrix[targetRow][targetCol];\n            if (cell.AttachedMonster == null) {\n                resultCell = cell;\n                // console.log(\"xxx - move from (\" \n                //         + this.attachedCell.Board_Y.toString()\n                //         + \",\"\n                //         + this.attachedCell.Board_X.toString()\n                //         + \") to (\"\n                //         + targetRow.toString()\n                //         + \",\"\n                //         + targetCol.toString()\n                //         + \")\");\n                break;\n            }\n            else{\n                continue;\n            }\n        }\n\n        return resultCell;\n    }\n\n    //#endregion\n\n    //#region Emotion\n\n    eyesOpen: boolean = true;\n    MONSTER_EYE_BASE_POS_X = -3;\n    MONSTER_EYE_BASE_POS_Y = 5;\n\n    eyeBlink(){\n        if (this.eyesOpen) {\n            this.MonsterEye.spriteFrame = this.m_eye_open;\n        }\n        else\n        {\n            this.MonsterEye.spriteFrame = this.m_eye_closed;\n        }\n\n        let interval = Math.random() * (this.eyesOpen ? 3 : 0.3) + (this.eyesOpen ? 0.5 : 0.1);\n        this.eyesOpen = !this.eyesOpen;\n        this.scheduleOnce(\n            ()=>{\n                this.eyeBlink();\n            },interval);\n    }\n\n    eyeMove(){\n        this.MonsterEye.node.position = new cc.Vec2(\n            cc.randomMinus1To1() * 3 + this.MONSTER_EYE_BASE_POS_X,\n            cc.randomMinus1To1() * 3 + this.MONSTER_EYE_BASE_POS_Y);\n        let interval = Math.random() * 2;\n\n        this.scheduleOnce(\n            ()=>{\n                this.eyeMove();\n            },interval);\n    }\n\n    setEyeVisibility(visible: boolean){\n        this.MonsterEye.enabled = visible;\n    }\n\n    IsAngry = false;\n    MONSTER_SCALE_DURATION = 0.15;\n    MONSTER_SCALE_NORMAL = 1.2;\n    MONSTER_SCALE_ANGRY = 1.8;\n    MONSTER_ANGRY_DURATION = 1;\n\n    GetAngry(){\n        if (this.IsAngry)\n        {\n            return;\n        }\n\n        this.IsAngry = true;\n        this.setEyeVisibility(false);\n        this.MonsterBody.spriteFrame = this.sf_body_angry;\n        this.node.runAction(cc.scaleTo(this.MONSTER_SCALE_DURATION, this.MONSTER_SCALE_ANGRY, this.MONSTER_SCALE_ANGRY));\n        this.scheduleOnce(()=>{\n            this.MonsterBody.spriteFrame = this.sf_body_normal;\n            this.node.runAction(cc.scaleTo(this.MONSTER_SCALE_DURATION, this.MONSTER_SCALE_NORMAL, this.MONSTER_SCALE_NORMAL));\n            this.setEyeVisibility(true);\n            this.IsAngry = false;\n        },this.MONSTER_ANGRY_DURATION);\n        this.thrill();\n\n        //audio\n        this.AudioBark.play();\n        // var sei = SE_Bark.CreateInstance();\n        // sei.Volume = App.SoundEffectVolume;\n        // sei.Play();\n    }\n\n    MONSTER_thrill_count_MAX = 10;\n    MONSTER_thrill_INTERVAL = 0.07;\n    thrill_count = 0;\n    thrill_old(){\n        if (this.thrill_count < this.MONSTER_thrill_count_MAX) {\n            let delta = (this.thrill_count % 2) == 0 ? 0.1 : -0.1;\n            this.MonsterBody.node.runAction(\n                cc.sequence(\n                    cc.scaleBy(this.MONSTER_thrill_INTERVAL, delta),\n                    cc.callFunc(()=>this.thrill(),this)\n                )\n            );\n            this.thrill_count++;\n        }\n        else{\n            this.thrill_count = 0;\n            this.MonsterBody.node.scale = 1;\n        }\n    }\n\n    thrill(){\n        if (this.thrill_count < this.MONSTER_thrill_count_MAX) {\n            let delta = (this.thrill_count % 2) == 0 ? 5 : -5;\n            this.node.runAction(\n                cc.sequence(\n                    cc.rotateTo(this.MONSTER_thrill_INTERVAL, delta),\n                    cc.callFunc(()=>this.thrill(),this)\n                )\n            );\n            this.thrill_count++;\n        }\n        else{\n            this.thrill_count = 0;\n            this.node.rotation = 0;\n        }\n    }\n\n    //#endregion\n\n    //#region Burn\n\n    shock_count = 0;\n    MONSTER_SHOCK_INTERVAL = 0.06;\n    MONSTER_shock_count_MAX = 13;\n\n    Shock(){\n        this.setEyeVisibility(false);\n        this.shock_count = 0;\n        this.shockUpdate();\n\n        // /* queen prepare for transform */\n        // if (this.MonsterType == Enums.MonsterType.Queen) {\n        //     this.node.runAction(cc.scaleTo(Global.BURN_DURATION * 0.5, 0.5));\n        // }\n    }\n\n    shockUpdate(){\n        if (this.shock_count < this.MONSTER_shock_count_MAX) {\n            this.shock_count++;\n            this.MonsterBody.spriteFrame = (this.shock_count % 2) == 0 ? this.sf_body_shock_1 : this.sf_body_shock_2;\n            this.scheduleOnce(\n                ()=>{\n                    this.shockUpdate();\n                },this.MONSTER_SHOCK_INTERVAL);\n        }\n        else{\n            this.shock_count = 0;\n        }\n    }\n\n    //#endregion\n\n    //#region GamePlay Activity\n\n    Wound() : boolean {\n        let dead = false;\n        this.Health--;\n        if (this.Health > 0)\n        {\n            if (this.MonsterType == Enums.MonsterType.Large_2) {\n                this.MonsterType = Enums.MonsterType.Large_1;\n            }\n            else if (this.MonsterType == Enums.MonsterType.King_2) {\n                this.MonsterType = Enums.MonsterType.King_1;                \n            }\n            else if (this.MonsterType == Enums.MonsterType.Queen) {\n                this.queenTransform();\n                this.ShouldMoveAround = false;\n            }\n            this.setEyeVisibility(true);\n        }\n        else\n        {\n            this.Die();\n            dead = true;\n        }\n\n        return dead;\n    }\n\n    queenTransform(){\n        let options = [Enums.MonsterType.Small,\n                       Enums.MonsterType.Drunk,\n                       Enums.MonsterType.Fast];\n        let newMonsterType = options[ Math.floor(Math.random() * options.length) ];\n\n        this.node.runAction(\n            cc.sequence(\n                cc.scaleTo(Global.CELL_DROP_DURATION * 0.3, 0.3),\n                cc.callFunc(()=>this.MonsterType = newMonsterType),\n                cc.scaleTo(Global.CELL_DROP_DURATION * 0.6, 1)\n            )\n        );\n    }\n\n    Die(){\n        this.detachFromCell();\n\n        this.MonsterBody.spriteFrame = this.sf_body_shock_2;\n        this.node.runAction(cc.fadeOut(Global.MONSTER_MOVE_DURATION));\n        this.node.runAction(\n            cc.sequence(\n                cc.moveBy(Global.MONSTER_MOVE_DURATION, cc.p(0,this.node.height)),\n                cc.callFunc(()=>{\n                    this.node.parent.removeChild(this.node);\n                    // this.node.destroy();\n                }\n            )\n            ));\n        \n        if (!this.gameBoard.LightningBurn \n            && this.gameBoard.CurrentGameState != Enums.GameState.Bombing)\n        {\n            this.gameBoard.CountMonsterKill();\n        }\n    }\n\n    escaped: boolean = false;\n    Escape(){\n        this.escaped = true;\n        this.gameBoard.WarnEscape();\n        this.detachFromCell();\n        this.node.runAction(\n            cc.sequence(\n                cc.moveBy(Global.MONSTER_MOVE_DURATION, cc.p(0, -this.node.height)),\n                cc.callFunc(()=>{\n                    this.node.parent.removeChild(this.node);\n                    // this.node.destroy();\n                })\n            )\n        );\n\n        // if (CoreLogic.CurrentGameLevel.Tolerance >= 1)\n        // {\n        //     CoreLogic.CurrentGameLevel.Tolerance--;\n        //     CoreLogic.TopBar.UpdateTolerance();\n        // }\n    }\n\n    //#endregion\n\n}\n"]}